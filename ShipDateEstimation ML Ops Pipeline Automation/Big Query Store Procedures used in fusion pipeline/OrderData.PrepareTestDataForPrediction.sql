BEGIN
    CREATE OR REPLACE TABLE `OrderData.ShipDateInstances`
    AS
    WITH orderdetails AS
    (
    SELECT DISTINCT ORG_ID,
    ORDER_TYPE_ID,
    ITEM_ID,
    ORDER_LINE_QUANTITY,
    IS_GIFT,
    DELIVERY_METHOD_ID,
    IFNULL(SAFE_CAST(ALLOCATION_TIMESTAMP AS TIMESTAMP),ORDER_LINE_CREATED_TIMESTAMP) ALLOCATION_TIMESTAMP,
    EXTRACT(DAYOFWEEK FROM ORDER_LINE_CREATED_TIMESTAMP) CREATION_DAY_OF_WEEK,
    FORMAT_TIMESTAMP('%Y-%U',ORDER_LINE_CREATED_TIMESTAMP) CREATION_YEAR_WEEK,
    EXTRACT(HOUR FROM ORDER_LINE_CREATED_TIMESTAMP) CREATION_HOUR,
    EXTRACT(MONTH FROM ORDER_LINE_CREATED_TIMESTAMP) CREATION_MONTH,
    IF(REQUESTED_CARRIER = '\\N',SHIPPED_CARRIER,REQUESTED_CARRIER)||','||IF(REQUESTED_SERVICE_LEVEL = '\\N',SHIPPED_SERVICE_LEVEL,REQUESTED_SERVICE_LEVEL) SERVICE_LEVEL,
    LOCATION,
    LOCATION_TYPE_ID,
    IF(SOURCE_STATE != '\\N',UPPER(SOURCE_STATE),SOURCE_STATE) SOURCE_STATE,
    SOURCE_COUNTRY,
    SAFE_CAST(SOURCE_LATITUDE AS FLOAT64) SOURCE_LATITUDE,
    SAFE_CAST(SOURCE_LONGITUDE AS FLOAT64) SOURCE_LONGITUDE,
    IFNULL(SAFE_CAST(RELEASE_TIMESTAMP AS TIMESTAMP),ORDER_LINE_CREATED_TIMESTAMP) RELEASE_TIMESTAMP,
    SAFE_CAST(FULFILLMENT_DATE AS TIMESTAMP) FULFILLMENT_DATE,
    EXTRACT(DAYOFWEEK FROM SAFE_CAST(FULFILLMENT_DATE AS TIMESTAMP)) FULFIL_DAY_OF_WEEK,
    FORMAT_TIMESTAMP('%Y-%U',SAFE_CAST(FULFILLMENT_DATE AS TIMESTAMP)) FULFIL_YEAR_WEEK,
    ORDER_LINE_CREATED_TIMESTAMP
    FROM `OrderData.RawOrderDetailsMaster`
    --WHERE LOCATION ='2020'
    ),
    capacity AS
    (SELECT DISTINCT ORG_ID CAPACITY_ORG_ID,LOCATION_ID,DAY_OF_WEEK,YEAR_WEEK,
    TOTAL_CAPACITY_UTILIZED,CURRENT_BACKLOG,TIMESTAMP_TRUNC(QUERY_TIME,HOUR) QUERY_TIME
    FROM `OrderData.RawCapacityUtilization`
    --WHERE LOCATION_ID ='2020'
    )
    SELECT 
      DISTINCT ORG_ID,
      ORDER_TYPE_ID,
      ORDER_LINE_QUANTITY,
      IS_GIFT,
      DELIVERY_METHOD_ID,
      CASE WHEN TIMESTAMP_DIFF(ALLOCATION_TIMESTAMP,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60 < 0
      THEN 0
      WHEN TIMESTAMP_DIFF(ALLOCATION_TIMESTAMP,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60 < 1
      THEN 1
      ELSE ROUND(TIMESTAMP_DIFF(ALLOCATION_TIMESTAMP,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60,0) END  ORDER_CREATE_TO_ALLOCATION_IN_HOURS,
      CASE WHEN LOWER(DELIVERY_METHOD_ID) LIKE '%pick%store%' THEN
        'IN_STORE'
      ELSE 
        SERVICE_LEVEL END SERVICE_LEVEL,
      LOCATION||'-'||LOCATION_TYPE_ID SOURCE_LOCATION,
      TRIM(SOURCE_STATE) SOURCE_STATE,
      TRIM(SOURCE_COUNTRY) SOURCE_COUNTRY,
      SOURCE_LATITUDE,
      SOURCE_LONGITUDE,
      CASE WHEN TIMESTAMP_DIFF(RELEASE_TIMESTAMP,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60 < 0
      THEN 0
      WHEN TIMESTAMP_DIFF(RELEASE_TIMESTAMP,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60 < 1
      THEN 1
      ELSE ROUND(TIMESTAMP_DIFF(RELEASE_TIMESTAMP,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60,0) END ORDER_CREATE_TO_RELEASE_IN_HOURS,
      CASE WHEN TIMESTAMP_DIFF(FULFILLMENT_DATE,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60 < 0 THEN 0
      WHEN TIMESTAMP_DIFF(FULFILLMENT_DATE,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60 < 1 THEN 1 
      ELSE ROUND(TIMESTAMP_DIFF(FULFILLMENT_DATE,ORDER_LINE_CREATED_TIMESTAMP,MINUTE)/60,0) END ACTUAL_LABEL_VALUE,
      CREATION_DAY_OF_WEEK,
      CREATION_YEAR_WEEK,
      CREATION_MONTH,
      CREATION_HOUR,
      CASE WHEN CURRENT_BACKLOG <0 THEN 0 ELSE ROUND(CURRENT_BACKLOG,0) END CURRENT_BACKLOG,
      ROUND(TOTAL_CAPACITY_UTILIZED,0) TOTAL_CAPACITY_UTILIZED,
      0.0 SEVEN_DAY_AVERAGE_CAPACITY,
      0.0 SEVEN_DAY_MAX_CAPACITY,
      0.0 SEVEN_DAY_AVERAGE_BACKLOG,
      0.0 SEVEN_DAY_MAX_BACKLOG
    FROM orderdetails o 
    INNER JOIN CAPACITY c ON o.ORG_ID = c.CAPACITY_ORG_ID 
                        AND o.LOCATION = c.LOCATION_ID
                        AND o.CREATION_YEAR_WEEK = c.YEAR_WEEK 
                        AND CAST(o.CREATION_DAY_OF_WEEK AS INT64) = c.DAY_OF_WEEK
                        AND o.ORDER_LINE_CREATED_TIMESTAMP >= TIMESTAMP_SUB(c.QUERY_TIME, INTERVAL 1 HOUR) 
                        AND o.ORDER_LINE_CREATED_TIMESTAMP <= c.QUERY_TIME;
                      --  AND DATE(o.ORDER_LINE_CREATED_TIMESTAMP) >= '2019-03-14'
                      --  AND DATE(o.ORDER_LINE_CREATED_TIMESTAMP) <= '2019-03-18'

    UPDATE `OrderData.ShipDateInstances` a
    SET SEVEN_DAY_AVERAGE_CAPACITY = (SELECT ROUND(AVG(TOTAL_CAPACITY_UTILIZED),0) FROM `ma-rd-devils-sren.OrderData.RawCapacityUtilization`
    WHERE YEAR_WEEK = a.CREATION_YEAR_WEEK
    AND LOCATION_ID = SUBSTR(a.SOURCE_LOCATION,1,INSTR(a.SOURCE_LOCATION,'-')-1)
    AND ORG_ID = a.ORG_ID
    GROUP BY ORG_ID,LOCATION_ID,YEAR_WEEK)
    WHERE SEVEN_DAY_AVERAGE_CAPACITY =0.0;

    UPDATE `OrderData.ShipDateInstances` a
    SET SEVEN_DAY_MAX_CAPACITY = (SELECT ROUND(MAX(TOTAL_CAPACITY_UTILIZED),0) FROM `ma-rd-devils-sren.OrderData.RawCapacityUtilization`
    WHERE YEAR_WEEK = a.CREATION_YEAR_WEEK
    AND LOCATION_ID = SUBSTR(a.SOURCE_LOCATION,1,INSTR(a.SOURCE_LOCATION,'-')-1)
    AND ORG_ID = a.ORG_ID
    GROUP BY ORG_ID,LOCATION_ID,YEAR_WEEK)
    WHERE SEVEN_DAY_MAX_CAPACITY =0.0;

    UPDATE `OrderData.ShipDateInstances` a
    SET SEVEN_DAY_AVERAGE_BACKLOG = (SELECT CASE WHEN ROUND(AVG(CURRENT_BACKLOG),2) <0 THEN 0 ELSE ROUND(AVG(CURRENT_BACKLOG),0) END FROM `ma-rd-devils-sren.OrderData.RawCapacityUtilization`
    WHERE YEAR_WEEK = a.CREATION_YEAR_WEEK
    AND LOCATION_ID = SUBSTR(a.SOURCE_LOCATION,1,INSTR(a.SOURCE_LOCATION,'-')-1)
    AND ORG_ID = a.ORG_ID
    GROUP BY ORG_ID,LOCATION_ID,YEAR_WEEK),
    SEVEN_DAY_MAX_BACKLOG = (SELECT CASE WHEN ROUND(MAX(CURRENT_BACKLOG),2) <0 THEN 0 ELSE ROUND(MAX(CURRENT_BACKLOG),0) END FROM `ma-rd-devils-sren.OrderData.RawCapacityUtilization`
    WHERE YEAR_WEEK = a.CREATION_YEAR_WEEK
    AND LOCATION_ID = SUBSTR(a.SOURCE_LOCATION,1,INSTR(a.SOURCE_LOCATION,'-')-1)
    AND ORG_ID = a.ORG_ID
    GROUP BY ORG_ID,LOCATION_ID,YEAR_WEEK)
    WHERE 1=1;

    CREATE OR REPLACE TABLE `OrderData.Predictions`
    AS
    SELECT
      * EXCEPT (predicted_FULFILLMENT_DATE_IN_HOURS), ROUND(predicted_FULFILLMENT_DATE_IN_HOURS,0) PREDICTED_LABEL_VALUE,0.0 PREDICT_LABEL_IN_DAYS,0.0 ACTUAL_LABEL_IN_DAYS
    FROM
      ML.PREDICT(MODEL `OrderData.ShipDateDeterminationBQModel`,
        (
        SELECT
          * EXCEPT (ACTUAL_LABEL_VALUE), ROUND(ACTUAL_LABEL_VALUE,0) ACTUAL_LABEL_VALUE
        FROM
        `OrderData.ShipDateInstances`
        ));

    UPDATE `OrderData.Predictions`
    SET PREDICT_LABEL_IN_DAYS = CASE WHEN PREDICTED_LABEL_VALUE <= 24 THEN 1 ELSE CEILING(PREDICTED_LABEL_VALUE/24) END,
    ACTUAL_LABEL_IN_DAYS = CASE WHEN ACTUAL_LABEL_VALUE <= 24 THEN 1 ELSE CEILING(ACTUAL_LABEL_VALUE/24) END
    WHERE 1=1;

END